name: Build iOS

on: push

env:
  GODOT_VERSION: 3.2.3
  TAG_NAME: 3.2.3
  RELEASE_NAME: iOS compiled files for v3.2.3

jobs:

  ios-template:
    name: Compiling for iOS
    runs-on: "macos-latest"

    steps:
    - uses: actions/checkout@v2

    # Upload cache on completion and check it out now
    - name: Load .scons_cache directory
      id: ios-template-cache
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/godot-${{env.GODOT_VERSION}}-stable/.scons_cache/
        key: ${{github.job}}-master-${{github.ref}}-${{github.sha}}
        restore-keys: |
          ${{github.job}}-master-${{github.ref}}-${{github.sha}}
          ${{github.job}}-master-${{github.ref}}
          ${{github.job}}-master

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Configuring Python packages
      run: |
        python -c "import sys; print(sys.version)"
        python -m pip install scons
        python --version
        scons --version

    - name: Download and unzip stable Godot version source code
      run: |
        FULL_PATHNAME_DOWNLOAD_GODOT_SOURCE_CODE="https://github.com/godotengine/godot/archive/${{env.GODOT_VERSION}}-stable.zip"
        curl -LO $FULL_PATHNAME_DOWNLOAD_GODOT_SOURCE_CODE
        unzip ${{env.GODOT_VERSION}}-stable.zip

    - name: Copy godot firebase modifications
      run: |
        cp -r ${{github.workspace}}/godot-firebase/ ${{github.workspace}}/godot-${{env.GODOT_VERSION}}-stable/

    - name: Download firebase sdk
      run: |
        curl -L https://firebase.google.com/download/ios -o ${{github.workspace}}/firebase.zip
        unzip ${{github.workspace}}/firebase.zip
        mv ${{github.workspace}}/Firebase ${{github.workspace}}/godot-${{env.GODOT_VERSION}}-stable/platform/iphone/

    - name: Compiles the Source Code
      env:
        SCONS_CACHE: ${{github.workspace}}/godot-${{env.GODOT_VERSION}}-stable/.scons_cache/
      run: |
        ls -l ${{github.workspace}}/godot-${{env.GODOT_VERSION}}-stable/platform/iphone
        cd godot-${{env.GODOT_VERSION}}-stable
        scons p=iphone tools=no target=release arch=arm
        scons p=iphone tools=no target=release arch=arm64
        lipo -create bin/libgodot.iphone.opt.arm.a bin/libgodot.iphone.opt.arm64.a -output bin/release/libgodot.iphone.release.fat.a

    - name: Compress the binaries
      run: |
        zip -j ios-template-v${{env.GODOT_VERSION}}.zip godot-${{env.GODOT_VERSION}}-stable/bin/release/*

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ios-template-v${{env.GODOT_VERSION}}.zip
        path: ios-template-v${{env.GODOT_VERSION}}.zip

  upload-assets-release:
    needs: [ios-template]
    name: Upload assets to release
    runs-on: ubuntu-latest
    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Delete previous tag
      uses: dev-drprasad/delete-tag-and-release@v0.1.2
      with:
        delete_release: true
        tag_name: ${{env.TAG_NAME}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release and tag
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{env.TAG_NAME}}
        release_name: ${{env.RELEASE_NAME}}
